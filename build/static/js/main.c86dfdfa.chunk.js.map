{"version":3,"sources":["Clock.js","firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","timer","currentDate","React","useState","date","setDate","tick","Date","useEffect","timerID","setInterval","clearInterval","useNewTimer","className","toLocaleTimeString","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","firestore","localBusStops","SignIn","signInWithGoogle","a","provider","GoogleAuthProvider","signInWithPopup","collection","doc","currentUser","uid","get","then","exists","console","log","account","useruid","name","displayName","email","busStops","set","onClick","StopInput","newStop","setNewStop","e","preventDefault","fetch","ok","push","update","FieldValue","arrayUnion","target","reset","alert","onSubmit","htmlFor","type","onChange","value","placeholder","maxLength","max","min","id","required","disabled","Arrivals","allStops","map","stops","index","href","busStopID","filter","stop","arrayRemove","toString","length","slice","times","tIndex","Actual","Route","DepartureText","DepartureTime","RouteDirection","App","useAuthState","user","initAllStops","setAllStops","getAllStops","Promise","all","busStop","getArrivals","data","stopNum","response","json","retrieveData","gg","SignOut","signOut","interval","getTime","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA8BeA,MA5Bf,SAAeC,GAEb,IAAMC,EASR,SAAqBC,GAAc,IAAD,EACRC,IAAMC,SAASF,GADP,mBACzBG,EADyB,KACnBC,EADmB,KAUhC,SAASC,IACPD,EAAQ,IAAIE,MAGd,OAXAL,IAAMM,WAAU,WACd,IAAIC,EAAUC,aAAY,kBAAMJ,MAAQ,KACxC,OAAO,WACLK,cAAcF,OAQXL,EAvBOQ,CAAY,IAAIL,MAE9B,OACE,8BACE,oBAAIM,UAAU,OAAd,SAAsBb,EAAMc,0B,OCEnBC,G,YAVQ,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,kDACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8C,cCKXC,IAASC,cAAcT,GAEvB,IAAMU,EAAOF,IAASE,OAChBC,EAAYH,IAASG,YAEvBC,EAAgB,GAEpB,SAASC,IACP,IAAMC,EAAgB,uCAAG,4BAAAC,EAAA,6DACjBC,EAAW,IAAIR,IAASE,KAAKO,mBADZ,SAEjBP,EAAKQ,gBAAgBF,GAFJ,OAIvBL,EACGQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KACrBC,MACAC,MAAK,SAACJ,GACL,GAAIA,EAAIK,OAAQ,CACdC,QAAQC,IAAI,kBAEEnB,IACXG,YACAQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,SACnB,CACLI,QAAQC,IAAI,uBACZ,IAAMC,EAAU,CACdC,QAASnB,EAAKW,YAAYC,IAC1BQ,KAAMpB,EAAKW,YAAYU,YACvBC,MAAOtB,EAAKW,YAAYW,MACxBC,SAAU,IAGZzB,IACGG,YACAQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KACrBY,IAAIN,OA7BU,2CAAH,qDAiCtB,OACE,wBAAQ9B,UAAU,UAAUqC,QAASrB,EAArC,iCAMJ,SAASsB,IAAa,IAAD,EACWhD,mBAAS,IADpB,mBACZiD,EADY,KACHC,EADG,iDAGnB,WAA4BC,GAA5B,SAAAxB,EAAA,6DACEwB,EAAEC,iBACFd,QAAQC,IAAIU,GAFd,SAGyBI,MAAM,wCAAD,OACcJ,EADd,iBAH9B,cAMeK,IACX9B,EAAc+B,KAAKN,GACnB1B,EACGQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KACrBC,MACAC,MAAK,SAACJ,GACDA,EAAIK,QACQjB,IACXG,YACAQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KAEhBsB,OAAO,CACbX,SAAUzB,IAASG,UAAUkC,WAAWC,WAAWT,QAI3DE,EAAEQ,OAAOC,SAGTC,MAAM,GAAD,OAAIZ,EAAJ,uCA3BT,4CAHmB,sBAkCnB,OACE,uBAAMa,SAnCW,4CAmCjB,UACE,uBAAOpD,UAAU,UAAUqD,QAAQ,aAAnC,mCAGA,uBACEC,KAAK,SACLC,SAAU,SAACd,GAAD,OAAOD,EAAWC,EAAEQ,OAAOO,QACrCC,YAAY,QACZC,UAAU,IACVC,IAAI,QACJC,IAAI,IACJC,GAAG,aACHC,UAAQ,IAGV,wBAAQ9D,UAAU,MAAMsD,KAAK,SAASS,UAAWxB,EAAjD,oBA+BN,SAASyB,EAAS9E,GAChB,OACE,8BACGA,EAAM+E,SAASC,KAAI,SAACC,EAAOC,GAC1B,OACE,gCACE,+BACE,mBACEC,KAAI,+CAA0CnF,EAAMiD,SAASiC,IAC7DnB,OAAO,SAFT,SAIG/D,EAAMiD,SAASiC,KAGlB,wBACEpE,UAAU,SACVsD,KAAK,SACLjB,QAAS,SAACI,GAAD,OAzCL6B,EAyCuBpF,EAAMiD,SAASiC,GAtCxDtD,EAAgBA,EAAcyD,QAAO,SAACC,GAAD,OAAUA,IAASF,UACxDzD,EACGQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KACrBC,MACAC,MAAK,SAACJ,GACDA,EAAIK,QACQjB,IACXG,YACAQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KAEhBsB,OAAO,CACbX,SAAUzB,IAASG,UAAUkC,WAAW0B,YACtCH,EAAUI,iBAjBtB,IAAoBJ,GAsCN,kBAQF,kCACE,gCACE,+BACE,yCACA,2CAGJ,gCAEQH,IAAUA,EAAMQ,OAEhB,+BACE,qCACA,wCAGKR,EACFA,EAAMS,MAAM,EAAG,GAAGV,KAAI,SAACW,EAAOC,GACnC,OACE,+BAGE,oBAAI9E,UAAS,aAAQ6E,EAAME,OAAS,SAAW,IAA/C,SACGF,EAAMG,QAET,oBAAIhF,UAAS,aAAQ6E,EAAME,OAAS,SAAW,IAA/C,SACGF,EAAMI,kBAPX,UACUJ,EAAMG,MADhB,YACyBH,EAAMK,cAD/B,YACgDL,EAAMM,yBAJrD,SAjCf,UAAajG,EAAMiD,SAASiC,GAA5B,YAAsCA,SA2DhD,IA8GegB,EA9GH,WAAO,IAgBIpD,EAhBL,EACDqD,YAAazE,GAArB0E,EADS,oBAKVC,EAAe,CAAC,CAAC,CAAER,QAAQ,EAAOE,cAAe,gBALvC,EAOgB3F,mBAAS,CAACiG,IAP1B,mBAOTtB,EAPS,KAOCuB,EAPD,KASVC,EAAW,uCAAG,WAAO3E,GAAP,eAAAG,EAAA,sEACCyE,QAAQC,IACzB7E,EAAcoD,KAAI,SAAC0B,GAAD,OAAaC,EAAYD,OAF3B,cACZE,EADY,yBAIXA,GAJW,2CAAH,sDAWXD,EAAW,uCAAG,WAAOE,GAAP,iBAAA9E,EAAA,sEACK0B,MAAM,wCAAD,OACcoD,EADd,iBADV,YACZC,EADY,QAILpD,GAJK,gCAKGoD,EAASC,OALZ,cAKVH,EALU,yBAMTA,GANS,2CAAH,sDAUXI,EAAY,uCAAG,8BAAAjF,EAAA,sEACFwE,EAAY3E,GADV,UACfgF,EADe,OAEnBN,EAAYM,GACZlE,QAAQC,IAAIoC,IAERqB,IAAQ1E,EAAKW,YAAYC,IALV,iCAMFX,EACZQ,WAAW,YACXC,IAAIV,EAAKW,YAAYC,KACrBC,MATc,OAMb0E,EANa,OAYfrF,IAAkBqF,EAAGL,OAAO3D,UAC5BrB,EAAc6D,QAAUwB,EAAGL,OAAO3D,SAASwC,SAE3C7D,EAAgBqF,EAAGL,OAAO3D,UAfX,4CAAH,qDAoBlB,SAASiE,IAEP,OADAtF,EAAgB,GAEdF,EAAKW,aACH,wBACE+B,KAAK,SACLtD,UAAU,SACVqC,QAAS,WACPzB,EAAKyF,UAAU3E,KAAK8D,EAAYD,KAJpC,SAOE,sBAAMvF,UAAU,kCAkBxB,OAZAL,qBAAU,WACR,GAAI2F,EAAM,CACR,IAAMgB,EAAWzG,YAAW,sBAAC,sBAAAoB,EAAA,sDAC3BiF,IAD2B,2CAE1B,KAEH,OAAO,WACLpG,cAAcwG,OAGjB,CAACrC,EAAUnD,EAAewE,IAG3B,sBAAKtF,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,MAEDsF,EACC,qCACE,gCACE,wCACS1E,EAAKW,YAAYU,YAD1B,IACuC,cAACmE,EAAD,OAEvC,oBAAGpG,UAAU,iBAAb,4BACkBY,EAAKW,YAAYW,YAIrC,cAACI,EAAD,IAEA,cAAC0B,EAAD,CAEEC,SAAUA,EACV9B,SAAUrB,IApFCkB,EAkFM,GAjFnB,GAAN,OAAUA,EAAV,aAAkB,IAAItC,MAAO6G,gBAuFzB,cAACxF,EAAD,QCzSOyF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c86dfdfa.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nfunction Clock(props) {\n  //Here we reference our custom hook\n  const timer = useNewTimer(new Date())\n\n  return (\n    <div>\n      <h1 className='time'>{timer.toLocaleTimeString()}</h1>\n    </div>\n  )\n}\n\nfunction useNewTimer(currentDate) {\n  const [date, setDate] = React.useState(currentDate)\n\n  React.useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000)\n    return function cleanup() {\n      clearInterval(timerID)\n    }\n  })\n\n  function tick() {\n    setDate(new Date())\n  }\n\n  return date\n}\n\nexport default Clock\n","const firebaseConfig = {\n    apiKey: \"AIzaSyA5ZNxod7Id7oQLNAPC8aDO7maOoNcR69U\",\n    authDomain: \"chut2-c2958.firebaseapp.com\",\n    databaseURL: \"https://chut2-c2958-default-rtdb.firebaseio.com\",\n    projectId: \"chut2-c2958\",\n    storageBucket: \"chut2-c2958.appspot.com\",\n    messagingSenderId: \"861344867001\",\n    appId: \"1:861344867001:web:01cf3be224a6a9ac743168\"\n  }\n\nexport default firebaseConfig","import './App.css'\nimport React, { useEffect, useState } from 'react'\nimport Clock from './Clock'\n// import Arrivals from './Arrivals'\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport firebaseConfig from './firebaseConfig'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nfirebase.initializeApp(firebaseConfig)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nvar localBusStops = []\n\nfunction SignIn() {\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    await auth.signInWithPopup(provider)\n\n    firestore\n      .collection('accounts')\n      .doc(auth.currentUser.uid)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log('account exists')\n\n          let userRef = firebase\n            .firestore()\n            .collection('accounts')\n            .doc(auth.currentUser.uid)\n        } else {\n          console.log('creating account...')\n          const account = {\n            useruid: auth.currentUser.uid,\n            name: auth.currentUser.displayName,\n            email: auth.currentUser.email,\n            busStops: [],\n          }\n\n          firebase\n            .firestore()\n            .collection('accounts')\n            .doc(auth.currentUser.uid)\n            .set(account)\n        }\n      })\n  }\n  return (\n    <button className=\"sign-in\" onClick={signInWithGoogle}>\n      Sign in with Google\n    </button>\n  )\n}\n\nfunction StopInput() {\n  const [newStop, setNewStop] = useState('')\n\n  async function addStopToDoc(e) {\n    e.preventDefault()\n    console.log(newStop)\n    const response = await fetch(\n      `https://svc.metrotransit.org/NexTrip/${newStop}?format=json`\n    )\n    if (response.ok) {\n      localBusStops.push(newStop)\n      firestore\n        .collection('accounts')\n        .doc(auth.currentUser.uid)\n        .get()\n        .then((doc) => {\n          if (doc.exists) {\n            let userRef = firebase\n              .firestore()\n              .collection('accounts')\n              .doc(auth.currentUser.uid)\n\n            userRef.update({\n              busStops: firebase.firestore.FieldValue.arrayUnion(newStop),\n            })\n          }\n        })\n      e.target.reset()\n    } else {\n      // console.log(response)\n      alert(`${newStop} is not a valid Metro Bus Stop ID.`)\n    }\n  }\n\n  return (\n    <form onSubmit={addStopToDoc}>\n      <label className=\"mr-sm-2\" htmlFor=\"busIDInput\">\n        Add Metro Bus Stop ID\n      </label>\n      <input\n        type=\"number\"\n        onChange={(e) => setNewStop(e.target.value)}\n        placeholder=\"16086\"\n        maxLength=\"5\"\n        max=\"99999\"\n        min=\"1\"\n        id=\"busIDInput\"\n        required\n      ></input>\n\n      <button className=\"add\" type=\"submit\" disabled={!newStop}>\n        Add\n      </button>\n    </form>\n  )\n}\n\nfunction removeStop(busStopID) {\n  // console.log(busStopID.toString())\n\n  localBusStops = localBusStops.filter((stop) => stop !== busStopID)\n  firestore\n    .collection('accounts')\n    .doc(auth.currentUser.uid)\n    .get()\n    .then((doc) => {\n      if (doc.exists) {\n        let userRef = firebase\n          .firestore()\n          .collection('accounts')\n          .doc(auth.currentUser.uid)\n\n        userRef.update({\n          busStops: firebase.firestore.FieldValue.arrayRemove(\n            busStopID.toString()\n          ),\n        })\n      }\n    })\n}\n\nfunction Arrivals(props) {\n  return (\n    <div>\n      {props.allStops.map((stops, index) => {\n        return (\n          <div key={`${props.busStops[index]}_${index}`}>\n            <h2>\n              <a\n                href={`https://www.metrotransit.org/nextrip/${props.busStops[index]}`}\n                target=\"_blank\"\n              >\n                {props.busStops[index]}\n              </a>\n\n              <button\n                className=\"delete\"\n                type=\"button\"\n                onClick={(e) => removeStop(props.busStops[index])}\n              >\n                X\n              </button>\n            </h2>\n            <table>\n              <thead>\n                <tr>\n                  <th>Bus No.</th>\n                  <th>Time</th>\n                </tr>\n              </thead>\n              <tbody>\n                {(() => {\n                  if (stops && !stops.length) {\n                    return (\n                      <tr>\n                        <td> - </td>\n                        <td> - </td>\n                      </tr>\n                    )\n                  } else if (stops) {\n                    return stops.slice(0, 5).map((times, tIndex) => {\n                      return (\n                        <tr\n                          key={`${times.Route}_${times.DepartureTime}_${times.RouteDirection}`}\n                        >\n                          <td className={`td ${times.Actual ? 'active' : ''}`}>\n                            {times.Route}\n                          </td>\n                          <td className={`td ${times.Actual ? 'active' : ''}`}>\n                            {times.DepartureText}\n                          </td>\n                        </tr>\n                      )\n                    })\n                  }\n                })()}\n              </tbody>\n            </table>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [user] = useAuthState(auth)\n\n  // const busStops = [16086, 16085, 877, 16111, 16183, 49881, 41243]\n\n  const initAllStops = [[{ Actual: false, DepartureText: 'Loading...' }]]\n\n  const [allStops, setAllStops] = useState([initAllStops])\n\n  const getAllStops = async (localBusStops) => {\n    const data = await Promise.all(\n      localBusStops.map((busStop) => getArrivals(busStop))\n    )\n    return data\n  }\n\n  const generateKey = (name) => {\n    return `${name}_${new Date().getTime()}`\n  }\n\n  const getArrivals = async (stopNum) => {\n    const response = await fetch(\n      `https://svc.metrotransit.org/NexTrip/${stopNum}?format=json`\n    )\n    if (response.ok) {\n      const data = await response.json()\n      return data\n    }\n  }\n\n  const retrieveData = async () => {\n    let data = await getAllStops(localBusStops)\n    setAllStops(data)\n    console.log(allStops)\n\n    if (user && auth.currentUser.uid) {\n      let gg = await firestore\n        .collection('accounts')\n        .doc(auth.currentUser.uid)\n        .get()\n\n      if (\n        localBusStops !== gg.data().busStops &&\n        localBusStops.length <= gg.data().busStops.length\n      ) {\n        localBusStops = gg.data().busStops\n      }\n    }\n  }\n\n  function SignOut() {\n    localBusStops = []\n    return (\n      auth.currentUser && (\n        <button\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => {\n            auth.signOut().then(setAllStops(initAllStops))\n          }}\n        >\n          <span className=\"glyphicon glyphicon-log-out\"></span>\n        </button>\n      )\n    )\n  }\n\n  useEffect(() => {\n    if (user) {\n      const interval = setInterval(async () => {\n        retrieveData()\n      }, 1000)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n  }, [allStops, localBusStops, user])\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Clock />\n      </header>\n      {user ? (\n        <>\n          <div>\n            <h2>\n              Hello {auth.currentUser.displayName} <SignOut />\n            </h2>\n            <p className=\"signed-in-with\">\n              Signed in with {auth.currentUser.email}\n            </p>\n          </div>\n\n          <StopInput />\n\n          <Arrivals\n            key={generateKey('')}\n            allStops={allStops}\n            busStops={localBusStops}\n          />\n        </>\n      ) : (\n        <SignIn />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}